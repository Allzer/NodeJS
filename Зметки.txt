Запуск сервера:
    php -S localhost:3000
    . PHP_EOL = \n

Переменные:
    Всё тоже самое. Обозначаются с помощью знака $. Чтобы при выводе объединить значения используем "."
    Чтобы переменная была видна везде и все её видоизменения считывались во всём коде, то нужно обозначить её в функции, как global
    Можно также создать стаичную переменную, которая будет изменяться только при вызове функции и обозначить её как static 
    (переменная сохраняет своё состояние при повторном вызове функции)

Встроенные функции:
    floatval() - привести к значению float
    intval() - тоже самое, но int и т.д
    ceil() - округляет число в большую сторону
    floor() - округляет число в меньшую сторону
    round('число','кол-во чисел полсе запятой') - округляет число
    mt_rand(min, max) - рандомное число в диапозоне
    strlen(string: $str) - длина строки
    trim() - удалаяет пробелы до и после строки
    strtolower(string: $str) - приводи текст в нижний регистр, если в тексте есть кириллица - использовать mb_strtolower(string: $str)
    strtoupper(string: $str) - переводит текст в верхний регистр, если в тексте есть кириллица - использовать mb_strtoupper(string: $str)
    md5(string: $str) - хеширует строки
    array_sum($list) - сложение всех элементов массива
    count() - считает длинну массива
    print_r - вывод массива ключ -> значение
    unset($arr[1]) - удалаяет элемент массива. Индексы не обновляются
    $list = array_values($lis) - чтобы обновить индексы
    sort($list) - сортирует массив по возрастанию
    rsort($list) - сортирует массив по убыванию
    shufle($list) - перемешивает массив
    in_array("3", $list) - ищет нужный элемент в массиве. Вывод 1/0 в зависимости от того, находится такое значение в массиве или нет
    $list = array_slice($list, start, stop) - срезы
    array_merge($arr1, $arr2) - объединение массивов
    gettype($x) - выводит тип переменной
    strpos($str, 'sumbols') - иещт символ в строке. Возвращает кол-во встреченных совпадений или false
    explode(",", string) - возвращает массивслов, разбитых по параметру

Константы:
    define(constant_name: 'AGE', value: 24);

Работа со строками:
    Двойные ковычки работают, как f-строка. На их обработку уходит в 2 раза больше памяти
    
Условные операторы:
    if($a==5 || $a==4){
        echo 'a = 5';
    }
    else if($a==3){
        echo 'a = 3';
    }
    else{
        echo 'not ravno';
    }
    
    Можно также сравнивать строки. Если внутри условного оператора одна строчка кода, 
    то можно не использовать фигурные скобки в других случаях они нужны

    || - или
    && - и

Массивы:
    $numbers = array(3,4,5,5);
    можно также Обозначать, как $arr = []

    Словари:
        $dict = ['1' => 50, '2' => 32]

    Многомерные массивы:
        $matrix = [[], [], []];

Циклы:
    цикл for:
        for( $i = 0; $i < 10; $i++)
            echo $i.'<br>';
        
        работа с массивами:
            $list = [10,15,23.5];
            for ($i = 0; $i < count($list); $i++) {
                echo"". $list[$i] ."<br>";
            }
    цикл foreach:
        foreach ($dict as $key => $value) {
            echo ''. $key .':'. $value .'<br>';
        }
        пример для работы со словарями, для массива всё тоже самое, но без $key. Но если нужно вывести индексы, то можно использовать $key

    цикл while:
        $i = 0;
        while ($i < 15){
            echo $i.'<br>';
            $i++;
        }

    цикл do while:
        $i = 0;
        do {
            echo $i.'<br>';
            $i++;
        }
        while ($i < 15)

Функции:
    function info($x, $y){
        return $x + $y;
    }

Подкючение файлов:
    require("path") - директива для подключения файлов
    Подобный способ просто берёт и вставляет код из файла по указанному адресу. Если происходит ошибка в этой директиве, то дальнейший код не обрабатывается

    include("path") - также подключет файлы, но в случае сбоя дальнейший код обрабатывается

    Если добавить к каждой директиве _once - файл будет подключен лишь  1 раз

Обработка форм:
    print_r($_POST); - вывод данных отправленных в форме в виде ассоциативного списка
    header('Location: index.php') - переадрисация на нужную страницу (нельзя выводить ничего перед header)
    $_POST - глобавльный массив с post данными
    $_GET - глобавльный массив с get данными
    Если передаём данные через post, то они передаются скрытно, если нет, то через url 
    (http://localhost:3000/check_get.php?username=den&email=d%40mail&psw=qwer&message=)

Дата и время:
    date("d:F:Y", time + N); time - начало отсчёта времени, N - прибавленное кол-во секунд, чтобы можно было вывести будущее время
    date("d:F:Y", strtotime("arg")) - можно ввести например значение now, чтобы вывести настоящее время. Также можно прибавлять время: strtotime("+10 Minute")


Работа с файлами:
    fopen("text.txt","r"); - если файла нет, то php сам его создаст
    fwrite($file,"Пробуем перенос на другую строку \nПеренос");
    $content = fread($file, filesize("text.txt"));
    fclose($file); - закрыть файл. Это обязатаельно
    file_put_contents($file_1, $file_2); - помещает текст из второго фалйа в первый
    file_get_contents($filename); - выводит содержимое файла
    file_exists($filename); - проверка существования файла. Возвращает 1, если файл есть или ничего, если файла нет
    rename(a.txt, newname.txt) - переименовать файл
    unlink("name.txt") - удалаяет файл
    fileperms(__FILE__) - показывает разрешения файла в кльлолм вызвана функция
    chmod(__FILE__, 0777); - изменяет разрешения файла